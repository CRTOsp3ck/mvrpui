/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
    "/v1/enum": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DtoEnumsDTO"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/ext/inventory/inventory/exists_by_item_id/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/ext/inventory/inventory_transaction/search_all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchInventoryTransactionDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/entity/entity": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateEntityDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/entity/entity/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateEntityDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/entity/entity/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchEntityDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/goods_issue_note": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateGoodsIssueNoteDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/goods_issue_note/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateGoodsIssueNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/goods_issue_note/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchGoodsIssueNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/goods_issue_note_view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/goods_issue_note_view/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/goods_issue_note_view/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchGoodsIssueNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/inventory": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateInventoryDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/inventory/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateInventoryDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/inventory/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchInventoryDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/inventory_transaction": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateInventoryTransactionDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/inventory_transaction/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateInventoryTransactionDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/inventory_transaction/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchInventoryTransactionDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/inventory_view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/inventory_view/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/inventory_view/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchInventoryDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/return_merchandise_authorization": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateReturnMerchandiseAuthorizationDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/return_merchandise_authorization/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateReturnMerchandiseAuthorizationDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/return_merchandise_authorization/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchReturnMerchandiseAuthorizationDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/return_merchandise_authorization_view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/return_merchandise_authorization_view/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/return_merchandise_authorization_view/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchReturnMerchandiseAuthorizationDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/stock_count_sheet": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateStockCountSheetDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/stock_count_sheet/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateStockCountSheetDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/stock_count_sheet/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchStockCountSheetDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/stock_count_sheet_view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/stock_count_sheet_view/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/inventory/stock_count_sheet_view/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchStockCountSheetDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/credit_note": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateCreditNoteDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/credit_note/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateCreditNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/credit_note/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchCreditNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/credit_note_view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/credit_note_view/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/credit_note_view/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchCreditNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/debit_note": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateDebitNoteDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/debit_note/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateDebitNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/debit_note/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchDebitNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/invoice": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateInvoiceDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/invoice/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateInvoiceDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/invoice/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchInvoiceDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/invoice_view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/invoice_view/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/invoice_view/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchInvoiceDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/payment_receipt": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreatePaymentReceiptDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/payment_receipt/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdatePaymentReceiptDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/invoice/payment_receipt/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchPaymentReceiptDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/item/item": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateItemDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/item/item/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateItemDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/item/item/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchItemDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/delivery_note": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateDeliveryNoteDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/delivery_note/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateDeliveryNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/delivery_note/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchDeliveryNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/delivery_note_view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/delivery_note_view/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/delivery_note_view/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchDeliveryNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/goods_return_note": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateGoodsReturnNoteDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/goods_return_note/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateGoodsReturnNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/goods_return_note/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchGoodsReturnNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/goods_return_note_view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/goods_return_note_view/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/goods_return_note_view/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchGoodsReturnNoteDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/order_confirmation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateOrderConfirmationDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/order_confirmation/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateOrderConfirmationDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/order_confirmation/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchOrderConfirmationDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/order_confirmation_view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/order_confirmation_view/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/order_confirmation_view/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchOrderConfirmationDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/sales_order": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateSalesOrderDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/sales_order/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateSalesOrderDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/sales_order/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchSalesOrderDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/sales_order_view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/sales_order_view/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/sales_order_view/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchSalesOrderDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/sales_quotation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoCreateSalesQuotationDTO"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/sales_quotation/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoUpdateSalesQuotationDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/sales_quotation/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchSalesQuotationDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/sales_quotation_view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/sales_quotation_view/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/main/sale/sales_quotation_view/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DtoSearchSalesQuotationDTO"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HtrespResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
};
export type webhooks = Record<string, never>;
export type components = {
    schemas: {
        BaseBaseDocument: {
            additional_discount_amount?: number;
            additional_discount_rate_gen?: number;
            /** Format: date-time */
            created_at?: string;
            custom_adjustment_amount?: number;
            /** Format: date-time */
            deleted_at?: string;
            discount_amount_gen?: number;
            discount_rate_gen?: number;
            gross_amount_after_discount_gen?: number;
            gross_amount_gen?: number;
            id?: number;
            /** Format: date-time */
            issue_date?: string;
            net_amount_gen?: number;
            other_fees?: number;
            payment_instructions?: string;
            payment_status?: string;
            payment_terms?: string;
            remarks?: string;
            /** Format: date-time */
            shipping_date?: string;
            shipping_fees_gen?: number;
            shipping_method?: string;
            shipping_terms?: string;
            tax_amount_gen?: number;
            tax_rate_gen?: number;
            terms_and_conditions?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        BaseBaseDocumentItem: {
            base_document_id?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            discount_rate_gen?: number;
            final_unit_price_gen?: number;
            id?: number;
            inventory_id?: number;
            quantity?: number;
            tax_rate_gen?: number;
            total_discount_amount_gen?: number;
            total_sale_price_gen?: number;
            total_shipping_fees_gen?: number;
            total_tax_amount_gen?: number;
            unit_discount_amount?: number;
            unit_price?: number;
            unit_shipping_fees?: number;
            unit_tax_amount?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        DtoBaseEnumDTO: {
            payment_status?: components["schemas"]["DtoEnum"][] | null;
            payment_terms?: components["schemas"]["DtoEnum"][] | null;
            shipping_methods?: components["schemas"]["DtoEnum"][] | null;
            shipping_terms?: components["schemas"]["DtoEnum"][] | null;
        };
        DtoCreateCreditNoteDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            credit_note?: components["schemas"]["InvoiceCreditNote"];
            items?: components["schemas"]["DtoCreateCreditNoteItemDTO"][] | null;
        };
        DtoCreateCreditNoteItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            credit_note_item?: components["schemas"]["InvoiceCreditNoteItem"];
        };
        DtoCreateDebitNoteDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            debit_note?: components["schemas"]["InvoiceDebitNote"];
            items?: components["schemas"]["DtoCreateDebitNoteItemDTO"][] | null;
        };
        DtoCreateDebitNoteItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            debit_note_item?: components["schemas"]["InvoiceDebitNoteItem"];
        };
        DtoCreateDeliveryNoteDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            delivery_note?: components["schemas"]["SaleDeliveryNote"];
            items?: components["schemas"]["DtoCreateDeliveryNoteItemDTO"][] | null;
            to_create_from_sales_order?: boolean;
        };
        DtoCreateDeliveryNoteItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            delivery_note_item?: components["schemas"]["SaleDeliveryNoteItem"];
        };
        DtoCreateEntityDTO: {
            entity?: components["schemas"]["EntityEntity"];
        };
        DtoCreateGoodsIssueNoteDTO: {
            goods_issue_note?: components["schemas"]["InventoryGoodsIssueNote"];
            items?: components["schemas"]["DtoCreateGoodsIssueNoteItemDTO"][] | null;
        };
        DtoCreateGoodsIssueNoteItemDTO: {
            goods_issue_note_item?: components["schemas"]["InventoryGoodsIssueNoteItem"];
        };
        DtoCreateGoodsReturnNoteDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            goods_return_note?: components["schemas"]["SaleGoodsReturnNote"];
            items?: components["schemas"]["DtoCreateGoodsReturnNoteItemDTO"][] | null;
        };
        DtoCreateGoodsReturnNoteItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            goods_return_note_item?: components["schemas"]["SaleGoodsReturnNoteItem"];
        };
        DtoCreateInventoryDTO: {
            inventory?: components["schemas"]["InventoryInventory"];
        };
        DtoCreateInventoryTransactionDTO: {
            inventory_transaction?: components["schemas"]["InventoryInventoryTransaction"];
        };
        DtoCreateInvoiceDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            invoice?: components["schemas"]["InvoiceInvoice"];
            items?: components["schemas"]["DtoCreateInvoiceItemDTO"][] | null;
        };
        DtoCreateInvoiceItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            invoice_item?: components["schemas"]["InvoiceInvoiceItem"];
        };
        DtoCreateItemDTO: {
            item?: components["schemas"]["ItemItem"];
        };
        DtoCreateOrderConfirmationDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            items?: components["schemas"]["DtoCreateOrderConfirmationItemDTO"][] | null;
            order_confirmation?: components["schemas"]["SaleOrderConfirmation"];
            to_create_from_sales_order?: boolean;
        };
        DtoCreateOrderConfirmationItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            order_confirmation_item?: components["schemas"]["SaleOrderConfirmationItem"];
        };
        DtoCreatePaymentReceiptDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            items?: components["schemas"]["DtoCreatePaymentReceiptItemDTO"][] | null;
            payment_receipt?: components["schemas"]["InvoicePaymentReceipt"];
        };
        DtoCreatePaymentReceiptItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            payment_receipt_item?: components["schemas"]["InvoicePaymentReceiptItem"];
        };
        DtoCreateReturnMerchandiseAuthorizationDTO: {
            items?: components["schemas"]["DtoCreateReturnMerchandiseAuthorizationItemDTO"][] | null;
            return_merchandise_authorization?: components["schemas"]["InventoryReturnMerchandiseAuthorization"];
        };
        DtoCreateReturnMerchandiseAuthorizationItemDTO: {
            return_merchandise_authorization_item?: components["schemas"]["InventoryReturnMerchandiseAuthorizationItem"];
        };
        DtoCreateSalesOrderDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            items?: components["schemas"]["DtoCreateSalesOrderItemDTO"][] | null;
            sales_order?: components["schemas"]["SaleSalesOrder"];
        };
        DtoCreateSalesOrderItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            sales_order_item?: components["schemas"]["SaleSalesOrderItem"];
        };
        DtoCreateSalesQuotationDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            items?: components["schemas"]["DtoCreateSalesQuotationItemDTO"][] | null;
            sales_quotation?: components["schemas"]["SaleSalesQuotation"];
        };
        DtoCreateSalesQuotationItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            sales_quotation_item?: components["schemas"]["SaleSalesQuotationItem"];
        };
        DtoCreateStockCountSheetDTO: {
            stock_count_sheet?: components["schemas"]["InventoryStockCountSheet"];
        };
        DtoEntityEnumDTO: {
            entity_status?: components["schemas"]["DtoEnum"][] | null;
            entity_type?: components["schemas"]["DtoEnum"][] | null;
        };
        DtoEnum: {
            name?: string;
            value?: string;
        };
        DtoEnumsDTO: {
            base_enums?: components["schemas"]["DtoBaseEnumDTO"];
            entity_enums?: components["schemas"]["DtoEntityEnumDTO"];
            inventory_enums?: components["schemas"]["DtoInventoryEnumDTO"];
            item_enums?: components["schemas"]["DtoItemEnumDTO"];
            purchase_enums?: components["schemas"]["DtoPurchaseEnumDTO"];
            sale_enums?: components["schemas"]["DtoSaleEnumDTO"];
        };
        DtoInventoryEnumDTO: {
            inventory_transaction_type?: components["schemas"]["DtoEnum"][] | null;
        };
        DtoItemEnumDTO: {
            item_status?: components["schemas"]["DtoEnum"][] | null;
            item_type?: components["schemas"]["DtoEnum"][] | null;
        };
        DtoPurchaseEnumDTO: {
            purchase_order_status?: components["schemas"]["DtoEnum"][] | null;
        };
        DtoSaleEnumDTO: {
            sales_order_status?: components["schemas"]["DtoEnum"][] | null;
            sales_quotation_status?: components["schemas"]["DtoEnum"][] | null;
            sales_shipping_status?: components["schemas"]["DtoEnum"][] | null;
        };
        DtoSearchCreditNoteDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
        };
        DtoSearchDebitNoteDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
        };
        DtoSearchDeliveryNoteDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            shipping_status?: string;
            sort_by?: string;
        };
        DtoSearchEntityDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
            type?: string;
        };
        DtoSearchGoodsIssueNoteDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
        };
        DtoSearchGoodsReturnNoteDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
        };
        DtoSearchInventoryDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
        };
        DtoSearchInventoryTransactionDTO: {
            inventory_id?: string;
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
        };
        DtoSearchInvoiceDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
        };
        DtoSearchItemDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
            type?: string;
        };
        DtoSearchOrderConfirmationDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
        };
        DtoSearchPaymentReceiptDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
        };
        DtoSearchReturnMerchandiseAuthorizationDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
        };
        DtoSearchSalesOrderDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
        };
        DtoSearchSalesQuotationDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
        };
        DtoSearchStockCountSheetDTO: {
            items_per_page?: number;
            keyword?: string;
            order_by?: string;
            page?: number;
            server_side_get_rows_request?: components["schemas"]["QueryIServerSideGetRowsRequest"];
            sort_by?: string;
        };
        DtoUpdateCreditNoteDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            credit_note?: components["schemas"]["InvoiceCreditNote"];
            items?: components["schemas"]["DtoUpdateCreditNoteItemDTO"][] | null;
        };
        DtoUpdateCreditNoteItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            credit_note_item?: components["schemas"]["InvoiceCreditNoteItem"];
        };
        DtoUpdateDebitNoteDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            debit_note?: components["schemas"]["InvoiceDebitNote"];
            items?: components["schemas"]["DtoUpdateDebitNoteItemDTO"][] | null;
        };
        DtoUpdateDebitNoteItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            debit_note_item?: components["schemas"]["InvoiceDebitNoteItem"];
        };
        DtoUpdateDeliveryNoteDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            delivery_note?: components["schemas"]["SaleDeliveryNote"];
            items?: components["schemas"]["DtoUpdateDeliveryNoteItemDTO"][] | null;
        };
        DtoUpdateDeliveryNoteItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            delivery_note_item?: components["schemas"]["SaleDeliveryNoteItem"];
        };
        DtoUpdateEntityDTO: {
            entity?: components["schemas"]["EntityEntity"];
        };
        DtoUpdateGoodsIssueNoteDTO: {
            goods_issue_note?: components["schemas"]["InventoryGoodsIssueNote"];
            items?: components["schemas"]["DtoUpdateGoodsIssueNoteItemDTO"][] | null;
        };
        DtoUpdateGoodsIssueNoteItemDTO: {
            goods_issue_note_item?: components["schemas"]["InventoryGoodsIssueNoteItem"];
        };
        DtoUpdateGoodsReturnNoteDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            goods_return_note?: components["schemas"]["SaleGoodsReturnNote"];
            items?: components["schemas"]["DtoUpdateGoodsReturnNoteItemDTO"][] | null;
        };
        DtoUpdateGoodsReturnNoteItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            goods_return_note_item?: components["schemas"]["SaleGoodsReturnNoteItem"];
        };
        DtoUpdateInventoryDTO: {
            inventory?: components["schemas"]["InventoryInventory"];
        };
        DtoUpdateInventoryTransactionDTO: {
            inventory_transaction?: components["schemas"]["InventoryInventoryTransaction"];
        };
        DtoUpdateInvoiceDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            invoice?: components["schemas"]["InvoiceInvoice"];
            items?: components["schemas"]["DtoUpdateInvoiceItemDTO"][] | null;
        };
        DtoUpdateInvoiceItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            invoice_item?: components["schemas"]["InvoiceInvoiceItem"];
        };
        DtoUpdateItemDTO: {
            item?: components["schemas"]["ItemItem"];
        };
        DtoUpdateOrderConfirmationDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            items?: components["schemas"]["DtoUpdateOrderConfirmationItemDTO"][] | null;
            order_confirmation?: components["schemas"]["SaleOrderConfirmation"];
        };
        DtoUpdateOrderConfirmationItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            order_confirmation_item?: components["schemas"]["SaleOrderConfirmationItem"];
        };
        DtoUpdatePaymentReceiptDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            items?: components["schemas"]["DtoUpdatePaymentReceiptItemDTO"][] | null;
            payment_receipt?: components["schemas"]["InvoicePaymentReceipt"];
        };
        DtoUpdatePaymentReceiptItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            payment_receipt_item?: components["schemas"]["InvoicePaymentReceiptItem"];
        };
        DtoUpdateReturnMerchandiseAuthorizationDTO: {
            items?: components["schemas"]["DtoUpdateReturnMerchandiseAuthorizationItemDTO"][] | null;
            return_merchandise_authorization?: components["schemas"]["InventoryReturnMerchandiseAuthorization"];
        };
        DtoUpdateReturnMerchandiseAuthorizationItemDTO: {
            return_merchandise_authorization_item?: components["schemas"]["InventoryReturnMerchandiseAuthorizationItem"];
        };
        DtoUpdateSalesOrderDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            items?: components["schemas"]["DtoUpdateSalesOrderItemDTO"][] | null;
            sales_order?: components["schemas"]["SaleSalesOrder"];
        };
        DtoUpdateSalesOrderItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            sales_order_item?: components["schemas"]["SaleSalesOrderItem"];
        };
        DtoUpdateSalesQuotationDTO: {
            base_document?: components["schemas"]["BaseBaseDocument"];
            items?: components["schemas"]["DtoUpdateSalesQuotationItemDTO"][] | null;
            sales_quotation?: components["schemas"]["SaleSalesQuotation"];
        };
        DtoUpdateSalesQuotationItemDTO: {
            base_document_item?: components["schemas"]["BaseBaseDocumentItem"];
            sales_quotation_item?: components["schemas"]["SaleSalesQuotationItem"];
        };
        DtoUpdateStockCountSheetDTO: {
            stock_count_sheet?: components["schemas"]["InventoryStockCountSheet"];
        };
        EntityEntity: {
            address?: string;
            code?: string;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            description?: string;
            email?: string;
            id?: number;
            name?: string;
            phone?: string;
            status?: string;
            type?: string;
            /** Format: date-time */
            updated_at?: string;
            website?: string;
        };
        HtrespResponse: {
            data?: unknown;
            error?: string;
            message?: string;
            status?: number;
        };
        InventoryGoodsIssueNote: {
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            gin_number?: string;
            id?: number;
            /** Format: date-time */
            issue_date?: string;
            notes?: string;
            receipient_id?: number;
            total_value_gen?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        InventoryGoodsIssueNoteItem: {
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            gin_id?: number;
            id?: number;
            inventory_id?: number;
            quantity?: number;
            total_value_gen?: number;
            unit_value?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        InventoryInventory: {
            cost_per_unit?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            inventory_number?: string;
            is_discontinued?: boolean;
            item_id?: number;
            price_per_unit?: number;
            quantity_available?: number;
            quantity_reserved?: number;
            quantity_returned?: number;
            quantity_total_gen?: number;
            remarks?: string;
            reorder_level?: number;
            reorder_quantity?: number;
            total_value_on_hand_gen?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        InventoryInventoryTransaction: {
            /** Format: date-time */
            created_at?: string;
            created_by?: string;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            inventory_id?: number;
            quantity?: number;
            reason?: string;
            /** Format: date-time */
            transaction_date?: string;
            transaction_type?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        InventoryReturnMerchandiseAuthorization: {
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            notes?: string;
            received_by_employee_id?: number;
            returned_by_customer_id?: number;
            /** Format: date-time */
            rma_date?: string;
            rma_number?: string;
            total_value_gen?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        InventoryReturnMerchandiseAuthorizationItem: {
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            inventory_id?: number;
            quantity?: number;
            rma_id?: number;
            total_value_gen?: number;
            unit_value?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        InventoryStockCountSheet: {
            /** Format: date-time */
            count_date?: string;
            counted_by_employee_id?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            discrepancies_gen?: number;
            id?: number;
            inventory_id?: number;
            notes?: string;
            scs_number?: string;
            total_quantity?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        InvoiceCreditNote: {
            additional_charges?: number;
            base_document_id?: number;
            /** Format: date-time */
            created_at?: string;
            credit_note_number?: string;
            customer_id?: number;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            /** Format: date-time */
            issue_date?: string;
            reason_for_issuance?: string;
            total_value_gen?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        InvoiceCreditNoteItem: {
            base_document_item_id?: number;
            /** Format: date-time */
            created_at?: string;
            credit_note_id?: number;
            /** Format: date-time */
            deleted_at?: string;
            description?: string;
            id?: number;
            invoice_item_id?: number;
            name?: string;
            quantity?: number;
            total_value_gen?: number;
            unit_value?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        InvoiceDebitNote: {
            additional_charges?: number;
            base_document_id?: number;
            /** Format: date-time */
            created_at?: string;
            customer_id?: number;
            debit_note_number?: string;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            invoice_id?: number;
            reason_for_issuance?: string;
            total_value_gen?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        InvoiceDebitNoteItem: {
            additional_charges?: number;
            base_document_item_id?: number;
            /** Format: date-time */
            created_at?: string;
            debit_note_id?: number;
            /** Format: date-time */
            deleted_at?: string;
            description?: string;
            id?: number;
            invoice_item_id?: number;
            name?: string;
            quantity?: number;
            total_value?: number;
            unit_value?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        InvoiceInvoice: {
            base_document_id?: number;
            /** Format: date-time */
            created_at?: string;
            customer_id?: number;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            invoice_number?: string;
            /** Format: date-time */
            payment_due_date?: string;
            /** Format: date-time */
            updated_at?: string;
            vendor_id?: number;
        };
        InvoiceInvoiceItem: {
            base_document_item_id?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            invoice_id?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        InvoicePaymentReceipt: {
            base_document_id?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            date_of_payment?: string;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            invoice_id?: number;
            payee_id?: number;
            payer_id?: number;
            payment_receipt_number?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        InvoicePaymentReceiptItem: {
            base_document_item_id?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            payment_receipt_id?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        ItemItem: {
            brand?: string;
            category?: string;
            code?: string;
            cost?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            description?: string;
            id?: number;
            name?: string;
            origin?: string;
            price?: number;
            sku?: string;
            status?: string;
            type?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        QueryFilterItem: {
            conditions?: components["schemas"]["QueryFilterItem"][];
            dateFrom?: string;
            dateTo?: string;
            filter?: unknown;
            filterTo?: unknown;
            filterType?: string;
            operator?: string;
            type?: string;
        };
        QueryFilterModel: {
            [key: string]: components["schemas"]["QueryFilterItem"];
        };
        QueryIServerSideGetRowsRequest: {
            endRow?: number;
            filterModel?: components["schemas"]["QueryFilterModel"];
            groupKeys?: string[] | null;
            rowGroupCols?: components["schemas"]["QueryRowGroupCol"][] | null;
            sortModel?: components["schemas"]["QuerySortModel"][] | null;
            startRow?: number;
            valueCols?: components["schemas"]["QueryValueCol"][] | null;
        };
        QueryRowGroupCol: {
            field?: string;
            id?: string;
        };
        QuerySortModel: {
            colId?: string;
            sort?: string;
        };
        QueryValueCol: {
            aggFunc?: string;
            field?: string;
        };
        SaleDeliveryNote: {
            base_document_id?: number;
            bill_to_information?: components["schemas"]["TypesJSON"];
            /** Format: date-time */
            created_at?: string;
            customer_id?: number;
            /** Format: date-time */
            deleted_at?: string;
            delivery_note_number?: string;
            id?: number;
            overall_goods_condition?: string;
            received_by?: {
                [key: string]: unknown;
            };
            sales_order_id?: number;
            ship_from_information?: components["schemas"]["TypesJSON"];
            ship_to_information?: components["schemas"]["TypesJSON"];
            /** Format: date-time */
            shipping_date?: string;
            shipping_personnel_information?: {
                [key: string]: unknown;
            };
            shipping_status?: string;
            /** Format: date-time */
            updated_at?: string;
            vendor_id?: number;
        };
        SaleDeliveryNoteItem: {
            base_document_item_id?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            delivery_note_id?: number;
            goods_condition?: string;
            id?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        SaleGoodsReturnNote: {
            base_document_id?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            goods_return_note_number?: string;
            id?: number;
            overall_goods_condition?: string;
            received_by_employee_id?: number;
            receiving_location_information?: {
                [key: string]: unknown;
            };
            /** Format: date-time */
            return_date?: string;
            returned_by_customer_id?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        SaleGoodsReturnNoteItem: {
            base_document_item_id?: number;
            /** Format: date-time */
            created_at?: string;
            credit_note_id?: number;
            /** Format: date-time */
            deleted_at?: string;
            goods_return_note_id?: number;
            id?: number;
            invoice_id?: number;
            return_condition?: string;
            return_quantity?: number;
            return_reason?: string;
            rma_item_id?: number;
            sales_order_item_id?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        SaleOrderConfirmation: {
            base_document_id?: number;
            /** Format: date-time */
            created_at?: string;
            customer_id?: number;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            order_confirmation_number?: string;
            sales_order_id?: number;
            ship_to_information?: {
                [key: string]: unknown;
            };
            /** Format: date-time */
            updated_at?: string;
        };
        SaleOrderConfirmationItem: {
            base_document_item_id?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            order_confirmation_id?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        SaleSalesOrder: {
            base_document_id?: number;
            /** Format: date-time */
            created_at?: string;
            customer_id?: number;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            order_status?: string;
            /** Format: date-time */
            payment_due_date?: string;
            sales_order_number?: string;
            sales_representative_employee_id?: number;
            ship_from_information?: {
                [key: string]: unknown;
            };
            ship_to_information?: {
                [key: string]: unknown;
            };
            /** Format: date-time */
            updated_at?: string;
            vendor_id?: number;
        };
        SaleSalesOrderItem: {
            base_document_item_id?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            sales_order_id?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        SaleSalesQuotation: {
            base_document_id?: number;
            /** Format: date-time */
            created_at?: string;
            customer_id?: number;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            prepared_by_employee_id?: number;
            quotation_status?: string;
            requested_by?: {
                [key: string]: unknown;
            };
            sales_quotation_number?: string;
            ship_to_information?: {
                [key: string]: unknown;
            };
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            valid_until_date?: string;
            vendor_id?: number;
        };
        SaleSalesQuotationItem: {
            base_document_item_id?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            deleted_at?: string;
            id?: number;
            sales_quotation_id?: number;
            /** Format: date-time */
            updated_at?: string;
        };
        TypesJSON: number[] | null;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
};
export type SchemaBaseBaseDocument = components['schemas']['BaseBaseDocument'];
export type SchemaBaseBaseDocumentItem = components['schemas']['BaseBaseDocumentItem'];
export type SchemaDtoBaseEnumDto = components['schemas']['DtoBaseEnumDTO'];
export type SchemaDtoCreateCreditNoteDto = components['schemas']['DtoCreateCreditNoteDTO'];
export type SchemaDtoCreateCreditNoteItemDto = components['schemas']['DtoCreateCreditNoteItemDTO'];
export type SchemaDtoCreateDebitNoteDto = components['schemas']['DtoCreateDebitNoteDTO'];
export type SchemaDtoCreateDebitNoteItemDto = components['schemas']['DtoCreateDebitNoteItemDTO'];
export type SchemaDtoCreateDeliveryNoteDto = components['schemas']['DtoCreateDeliveryNoteDTO'];
export type SchemaDtoCreateDeliveryNoteItemDto = components['schemas']['DtoCreateDeliveryNoteItemDTO'];
export type SchemaDtoCreateEntityDto = components['schemas']['DtoCreateEntityDTO'];
export type SchemaDtoCreateGoodsIssueNoteDto = components['schemas']['DtoCreateGoodsIssueNoteDTO'];
export type SchemaDtoCreateGoodsIssueNoteItemDto = components['schemas']['DtoCreateGoodsIssueNoteItemDTO'];
export type SchemaDtoCreateGoodsReturnNoteDto = components['schemas']['DtoCreateGoodsReturnNoteDTO'];
export type SchemaDtoCreateGoodsReturnNoteItemDto = components['schemas']['DtoCreateGoodsReturnNoteItemDTO'];
export type SchemaDtoCreateInventoryDto = components['schemas']['DtoCreateInventoryDTO'];
export type SchemaDtoCreateInventoryTransactionDto = components['schemas']['DtoCreateInventoryTransactionDTO'];
export type SchemaDtoCreateInvoiceDto = components['schemas']['DtoCreateInvoiceDTO'];
export type SchemaDtoCreateInvoiceItemDto = components['schemas']['DtoCreateInvoiceItemDTO'];
export type SchemaDtoCreateItemDto = components['schemas']['DtoCreateItemDTO'];
export type SchemaDtoCreateOrderConfirmationDto = components['schemas']['DtoCreateOrderConfirmationDTO'];
export type SchemaDtoCreateOrderConfirmationItemDto = components['schemas']['DtoCreateOrderConfirmationItemDTO'];
export type SchemaDtoCreatePaymentReceiptDto = components['schemas']['DtoCreatePaymentReceiptDTO'];
export type SchemaDtoCreatePaymentReceiptItemDto = components['schemas']['DtoCreatePaymentReceiptItemDTO'];
export type SchemaDtoCreateReturnMerchandiseAuthorizationDto = components['schemas']['DtoCreateReturnMerchandiseAuthorizationDTO'];
export type SchemaDtoCreateReturnMerchandiseAuthorizationItemDto = components['schemas']['DtoCreateReturnMerchandiseAuthorizationItemDTO'];
export type SchemaDtoCreateSalesOrderDto = components['schemas']['DtoCreateSalesOrderDTO'];
export type SchemaDtoCreateSalesOrderItemDto = components['schemas']['DtoCreateSalesOrderItemDTO'];
export type SchemaDtoCreateSalesQuotationDto = components['schemas']['DtoCreateSalesQuotationDTO'];
export type SchemaDtoCreateSalesQuotationItemDto = components['schemas']['DtoCreateSalesQuotationItemDTO'];
export type SchemaDtoCreateStockCountSheetDto = components['schemas']['DtoCreateStockCountSheetDTO'];
export type SchemaDtoEntityEnumDto = components['schemas']['DtoEntityEnumDTO'];
export type SchemaDtoEnum = components['schemas']['DtoEnum'];
export type SchemaDtoEnumsDto = components['schemas']['DtoEnumsDTO'];
export type SchemaDtoInventoryEnumDto = components['schemas']['DtoInventoryEnumDTO'];
export type SchemaDtoItemEnumDto = components['schemas']['DtoItemEnumDTO'];
export type SchemaDtoPurchaseEnumDto = components['schemas']['DtoPurchaseEnumDTO'];
export type SchemaDtoSaleEnumDto = components['schemas']['DtoSaleEnumDTO'];
export type SchemaDtoSearchCreditNoteDto = components['schemas']['DtoSearchCreditNoteDTO'];
export type SchemaDtoSearchDebitNoteDto = components['schemas']['DtoSearchDebitNoteDTO'];
export type SchemaDtoSearchDeliveryNoteDto = components['schemas']['DtoSearchDeliveryNoteDTO'];
export type SchemaDtoSearchEntityDto = components['schemas']['DtoSearchEntityDTO'];
export type SchemaDtoSearchGoodsIssueNoteDto = components['schemas']['DtoSearchGoodsIssueNoteDTO'];
export type SchemaDtoSearchGoodsReturnNoteDto = components['schemas']['DtoSearchGoodsReturnNoteDTO'];
export type SchemaDtoSearchInventoryDto = components['schemas']['DtoSearchInventoryDTO'];
export type SchemaDtoSearchInventoryTransactionDto = components['schemas']['DtoSearchInventoryTransactionDTO'];
export type SchemaDtoSearchInvoiceDto = components['schemas']['DtoSearchInvoiceDTO'];
export type SchemaDtoSearchItemDto = components['schemas']['DtoSearchItemDTO'];
export type SchemaDtoSearchOrderConfirmationDto = components['schemas']['DtoSearchOrderConfirmationDTO'];
export type SchemaDtoSearchPaymentReceiptDto = components['schemas']['DtoSearchPaymentReceiptDTO'];
export type SchemaDtoSearchReturnMerchandiseAuthorizationDto = components['schemas']['DtoSearchReturnMerchandiseAuthorizationDTO'];
export type SchemaDtoSearchSalesOrderDto = components['schemas']['DtoSearchSalesOrderDTO'];
export type SchemaDtoSearchSalesQuotationDto = components['schemas']['DtoSearchSalesQuotationDTO'];
export type SchemaDtoSearchStockCountSheetDto = components['schemas']['DtoSearchStockCountSheetDTO'];
export type SchemaDtoUpdateCreditNoteDto = components['schemas']['DtoUpdateCreditNoteDTO'];
export type SchemaDtoUpdateCreditNoteItemDto = components['schemas']['DtoUpdateCreditNoteItemDTO'];
export type SchemaDtoUpdateDebitNoteDto = components['schemas']['DtoUpdateDebitNoteDTO'];
export type SchemaDtoUpdateDebitNoteItemDto = components['schemas']['DtoUpdateDebitNoteItemDTO'];
export type SchemaDtoUpdateDeliveryNoteDto = components['schemas']['DtoUpdateDeliveryNoteDTO'];
export type SchemaDtoUpdateDeliveryNoteItemDto = components['schemas']['DtoUpdateDeliveryNoteItemDTO'];
export type SchemaDtoUpdateEntityDto = components['schemas']['DtoUpdateEntityDTO'];
export type SchemaDtoUpdateGoodsIssueNoteDto = components['schemas']['DtoUpdateGoodsIssueNoteDTO'];
export type SchemaDtoUpdateGoodsIssueNoteItemDto = components['schemas']['DtoUpdateGoodsIssueNoteItemDTO'];
export type SchemaDtoUpdateGoodsReturnNoteDto = components['schemas']['DtoUpdateGoodsReturnNoteDTO'];
export type SchemaDtoUpdateGoodsReturnNoteItemDto = components['schemas']['DtoUpdateGoodsReturnNoteItemDTO'];
export type SchemaDtoUpdateInventoryDto = components['schemas']['DtoUpdateInventoryDTO'];
export type SchemaDtoUpdateInventoryTransactionDto = components['schemas']['DtoUpdateInventoryTransactionDTO'];
export type SchemaDtoUpdateInvoiceDto = components['schemas']['DtoUpdateInvoiceDTO'];
export type SchemaDtoUpdateInvoiceItemDto = components['schemas']['DtoUpdateInvoiceItemDTO'];
export type SchemaDtoUpdateItemDto = components['schemas']['DtoUpdateItemDTO'];
export type SchemaDtoUpdateOrderConfirmationDto = components['schemas']['DtoUpdateOrderConfirmationDTO'];
export type SchemaDtoUpdateOrderConfirmationItemDto = components['schemas']['DtoUpdateOrderConfirmationItemDTO'];
export type SchemaDtoUpdatePaymentReceiptDto = components['schemas']['DtoUpdatePaymentReceiptDTO'];
export type SchemaDtoUpdatePaymentReceiptItemDto = components['schemas']['DtoUpdatePaymentReceiptItemDTO'];
export type SchemaDtoUpdateReturnMerchandiseAuthorizationDto = components['schemas']['DtoUpdateReturnMerchandiseAuthorizationDTO'];
export type SchemaDtoUpdateReturnMerchandiseAuthorizationItemDto = components['schemas']['DtoUpdateReturnMerchandiseAuthorizationItemDTO'];
export type SchemaDtoUpdateSalesOrderDto = components['schemas']['DtoUpdateSalesOrderDTO'];
export type SchemaDtoUpdateSalesOrderItemDto = components['schemas']['DtoUpdateSalesOrderItemDTO'];
export type SchemaDtoUpdateSalesQuotationDto = components['schemas']['DtoUpdateSalesQuotationDTO'];
export type SchemaDtoUpdateSalesQuotationItemDto = components['schemas']['DtoUpdateSalesQuotationItemDTO'];
export type SchemaDtoUpdateStockCountSheetDto = components['schemas']['DtoUpdateStockCountSheetDTO'];
export type SchemaEntityEntity = components['schemas']['EntityEntity'];
export type SchemaHtrespResponse = components['schemas']['HtrespResponse'];
export type SchemaInventoryGoodsIssueNote = components['schemas']['InventoryGoodsIssueNote'];
export type SchemaInventoryGoodsIssueNoteItem = components['schemas']['InventoryGoodsIssueNoteItem'];
export type SchemaInventoryInventory = components['schemas']['InventoryInventory'];
export type SchemaInventoryInventoryTransaction = components['schemas']['InventoryInventoryTransaction'];
export type SchemaInventoryReturnMerchandiseAuthorization = components['schemas']['InventoryReturnMerchandiseAuthorization'];
export type SchemaInventoryReturnMerchandiseAuthorizationItem = components['schemas']['InventoryReturnMerchandiseAuthorizationItem'];
export type SchemaInventoryStockCountSheet = components['schemas']['InventoryStockCountSheet'];
export type SchemaInvoiceCreditNote = components['schemas']['InvoiceCreditNote'];
export type SchemaInvoiceCreditNoteItem = components['schemas']['InvoiceCreditNoteItem'];
export type SchemaInvoiceDebitNote = components['schemas']['InvoiceDebitNote'];
export type SchemaInvoiceDebitNoteItem = components['schemas']['InvoiceDebitNoteItem'];
export type SchemaInvoiceInvoice = components['schemas']['InvoiceInvoice'];
export type SchemaInvoiceInvoiceItem = components['schemas']['InvoiceInvoiceItem'];
export type SchemaInvoicePaymentReceipt = components['schemas']['InvoicePaymentReceipt'];
export type SchemaInvoicePaymentReceiptItem = components['schemas']['InvoicePaymentReceiptItem'];
export type SchemaItemItem = components['schemas']['ItemItem'];
export type SchemaQueryFilterItem = components['schemas']['QueryFilterItem'];
export type SchemaQueryFilterModel = components['schemas']['QueryFilterModel'];
export type SchemaQueryIServerSideGetRowsRequest = components['schemas']['QueryIServerSideGetRowsRequest'];
export type SchemaQueryRowGroupCol = components['schemas']['QueryRowGroupCol'];
export type SchemaQuerySortModel = components['schemas']['QuerySortModel'];
export type SchemaQueryValueCol = components['schemas']['QueryValueCol'];
export type SchemaSaleDeliveryNote = components['schemas']['SaleDeliveryNote'];
export type SchemaSaleDeliveryNoteItem = components['schemas']['SaleDeliveryNoteItem'];
export type SchemaSaleGoodsReturnNote = components['schemas']['SaleGoodsReturnNote'];
export type SchemaSaleGoodsReturnNoteItem = components['schemas']['SaleGoodsReturnNoteItem'];
export type SchemaSaleOrderConfirmation = components['schemas']['SaleOrderConfirmation'];
export type SchemaSaleOrderConfirmationItem = components['schemas']['SaleOrderConfirmationItem'];
export type SchemaSaleSalesOrder = components['schemas']['SaleSalesOrder'];
export type SchemaSaleSalesOrderItem = components['schemas']['SaleSalesOrderItem'];
export type SchemaSaleSalesQuotation = components['schemas']['SaleSalesQuotation'];
export type SchemaSaleSalesQuotationItem = components['schemas']['SaleSalesQuotationItem'];
export type SchemaTypesJson = components['schemas']['TypesJSON'];
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
